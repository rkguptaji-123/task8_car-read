import cv2
from matplotlib import pyplot as plt
import numpy as np
import imutils
import easyocr

img = cv2.imread('car4.jpg')
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
plt.imshow(cv2.cvtColor(gray, cv2.COLOR_BGR2RGB))


bfilter = cv2.bilateralFilter(gray, 11, 17, 17) #Noise reduction
edged = cv2.Canny(bfilter, 30, 200) #Edge detection
plt.imshow(cv2.cvtColor(edged, cv2.COLOR_BGR2RGB))

keypoints = cv2.findContours(edged.copy(), cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
contours = imutils.grab_contours(keypoints)
contours = sorted(contours, key=cv2.contourArea, reverse=True)[:10]

location = None
for contour in contours:
    approx = cv2.approxPolyDP(contour, 10, True)
    if len(approx) == 4:
        location = approx
        break

location

mask = np.zeros(gray.shape, np.uint8)
new_image = cv2.drawContours(mask, [location], 0,255, -1)
new_image = cv2.bitwise_and(img, img, mask=mask)

plt.imshow(cv2.cvtColor(new_image, cv2.COLOR_BGR2RGB))

(x,y) = np.where(mask==255)
(x1, y1) = (np.min(x), np.min(y))
(x2, y2) = (np.max(x), np.max(y))
cropped_image = gray[x1:x2+1, y1:y2+1]

plt.imshow(cv2.cvtColor(cropped_image, cv2.COLOR_BGR2RGB))

reader = easyocr.Reader(['en'])
result = reader.readtext(cropped_image)
result

plate_number = result[0][-2]




plate_number

plate_number = plate_number.replace( ' ', '')

plate_number[6:]


plate_number = plate_number.replace('.','')

plate_number

type(plate_number)

import requests
import xmltodict
import json

from xml.parsers import expat
import requests
import json
import xmltodict


def get_vehicle_info(plate_number):
    r = requests.get(
        "http://www.regcheck.org.uk/api/reg.asmx/CheckIndia?RegistrationNumber={0}&username= tiny2450".format(str(plate_number)))
    data = xmltodict.parse(r.content)
    jdata = json.dumps(data)
    df = json.loads(jdata)
    df1 = json.loads(df['Vehicle']['vehicleJson'])
    return df1


noplate = "MH01CT5470"
x = get_vehicle_info(noplate)
print(x)





def get_info():
    import sys
    import requests
    from bs4 import BeautifulSoup, SoupStrainer

    home_url = 'https://parivahan.gov.in/rcdlstatus/?pur_cd=102'
    post_url = 'https://parivahan.gov.in/rcdlstatus/vahan/rcDlHome.xhtml'

    first = 'MH01CT'

    second = '5470'

    r = requests.get(url=home_url)
    cookies = r.cookies
    soup = BeautifulSoup(r.text, 'html.parser')
    viewstate = soup.select('input[name="javax.faces.ViewState"]')[0]['value']

    data = {
    'javax.faces.partial.ajax':'true',
    'javax.faces.source': 'form_rcdl:j_idt59',
    'javax.faces.partial.execute':'@ALL',
    'javax.faces.partial.render': 'form_rcdl:pnl_show form_rcdl:pg_show form_rcdl:rcdl_pnl',
    'form_rcdl:j_idt59':'form_rcdl:j_idt59',
    'form_rcdl':'form_rcdl',
    'form_rcdl:tf_reg_no1': first,
    'form_rcdl:tf_reg_no2': second,
    'javax.faces.ViewState': viewstate,
    }

    r = requests.post(url=post_url, data=data, cookies=cookies)
    soup = BeautifulSoup(r.text, 'html.parser')
    table = SoupStrainer('tr')
    soup = BeautifulSoup(soup.get_text(), 'html.parser', parse_only=table)
    print(soup.get_text())


get_info()

first = 'MH01CT'
# The last four digits: 0555
second = '5470'

